// Copyright (c) The Libra Core Contributors
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package mempool;

import "transaction.proto";

/* MempoolSyncMsg represents the messages exchanging between validators to keep
 * transactions in sync. The proto definition provides the spec on the wire so
 * that others can implement their mempool service in various languages.
 * Mempool service is responsible for sending and receiving MempoolSyncMsg
 * across validators. */
message MempoolSyncMsg {
  oneof message {
    BroadcastTransactionsRequest broadcast_transactions_request = 1;
    BroadcastTransactionsResponse broadcast_transactions_response = 2;
  }
}

// ------------------------------------------------------------
// ---------------- Submit transactions -----------------------
// ------------------------------------------------------------
// The request for transaction submission.
message BroadcastTransactionsRequest {
  bytes peer_id = 1;
  repeated types.SignedTransaction transactions = 2;
}

enum BroadcastTransactionsStatusCode {
  Success = 0;
  MempoolIsFull = 1;
  SharedMempoolError = 2;
}

message BroadcastTransactionsResponse {
  BroadcastTransactionsStatusCode code = 1;
}
